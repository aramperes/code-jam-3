version: '3.2'

services:
  # game-host does the multiplayer coordination and hosting
  game-host:
    container_name: game-host
    build:
      context: ./services/game-host
      dockerfile: Dockerfile
    expose:
      - 5000
    depends_on:
      - redis
    environment:
      GAME_HOST: "0.0.0.0"
      GAME_PORT: "5000"

  # client-host contains the static files for the front-end game
  client-host:
    container_name: client-host
    build:
      context: ./services/client-host
      dockerfile: Dockerfile
    expose:
      - 5000
    depends_on:
      - game-host
    environment:
      FLASK_HOST: "0.0.0.0"
      FLASK_PORT: "5000"

  # nginx is the proxy that will pass HTTP requests to the appropriate hosts
  nginx:
    container_name: nginx
    build: ./services/nginx
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - client-host
      - game-host
    command: [nginx-debug, '-g', 'daemon off;']

  # redis is used as a data-store
  redis:
    container_name: redis
    image: redis
    # volumes:
    #  - /docker/host/dir:/data
